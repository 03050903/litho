apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
    }

    testOptions {
        unitTests.all {
            // Because we use Powermock and changing Robolectric configurations in combination
            // with native libraries, we can never reuse a class loader and need to fork a new
            // process per class.
            forkEvery = 1
            maxParallelForks = Math.ceil(Runtime.runtime.availableProcessors() * 1.5)
            jvmArgs '-Dcom.facebook.litho.is_oss=true'
        }
    }
}

afterEvaluate {
    tasks.withType(Test) {
        it.dependsOn rootProject.copyYogaLibs
        systemProperty 'java.library.path', "${rootDir}/build/jniLibs"
        environment 'LD_LIBRARY_PATH', "${rootDir}/build/jniLibs"
        environment 'DYLD_LIBRARY_PATH', "${rootDir}/build/jniLibs"
    }
}


dependencies {
    compile project(':litho-core')
    testCompile project(':litho-stubs')
    testCompile project(':litho-testing')
    testCompile project(':litho-widget')

    // Testing
    testCompile deps.robolectric
    testCompile deps.soloader
    testCompile deps.powermockMockito
    testCompile deps.powermockJunit
    testCompile deps.powermockXstream
}
